// В каждой клетке прямоугольной таблицы N×M записано некоторое число. Изначально игрок находится в левой верхней клетке. 
// За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться запрещено).
// При проходе через клетку с игрока берут столько килограммов еды, какое число записано в этой клетке (еду берут также за первую и последнюю клетки его пути).
// Требуется найти минимальный вес еды в килограммах, отдав которую игрок может попасть в правый нижний угол.

const solve = (matrix) => {
  
  const cost = [[matrix[0][0]]];
  const x = matrix.length, y = matrix[0].length;

  // заполняем вес первой строчки каждого столбца 
  for (let i = 1; i < y; i++){
    cost[0][i] = cost[0][i - 1] + matrix[0][i]
  }

  // заполняем вес первого столбца каждой строчки
  for (let i = 1; i < x; i++){
    const row = cost[i - 1][0] + matrix[i][0];
    cost[i] = [row]; 
  }

  // считаем полную матрицу стоимости прохода 
  for (let i = 1; i < x; i++){
    for (let j = 1; j < y; j++){
      // берем либо минимальное из нижней строчки и левой колонки а также добавляем стоимость перехода в ячейку
      cost[i][j] = Math.min(cost[i - 1][j], cost[i][j - 1]) + matrix[i][j]
    }
  }
  
  return cost[x - 1][y - 1]
}
